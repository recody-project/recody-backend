rootProject.name = 'recody-backend'

include(":common",
        ":common-content")

include(":common-boot-utils")

include(":service-movie-core",
        ":service-movie",
        ":service-movie-api-shared",
        ":service-movie-data",
        ":service-movie-api-tmdb")

include(":service-music-api",
        ":service-music-core",
        ":service-music-impl")

include(":service-performance-api",
        ":service-performance-api-core",
        ":service-performance-impl")

include(":service-catalog-content-core",
        ":service-catalog-content-data",
        ":service-catalog-content",
        ":service-catalog-content-shared",
        ":service-catalog-record-core",
        ":service-catalog-record-data",
        ":service-catalog-record",
        ":service-catalog-record-shared")

include(":service-users-api",
        ":service-users-core",
        ":service-users-data",
        ":service-users-impl",
        ":service-users-shared")


String movieProjectDir = "service-movie"
project(":service-movie-core").projectDir = new File(settingsDir, "${movieProjectDir}/core")
project(":service-movie-data").projectDir = new File(settingsDir, "${movieProjectDir}/data")
project(":service-movie").projectDir = new File(settingsDir, "${movieProjectDir}/impl")
project(":service-movie-api-shared").projectDir = new File(settingsDir, "${movieProjectDir}/shared")
project(":service-movie-api-tmdb").projectDir = new File(settingsDir, "${movieProjectDir}/tmdb")


String musicProjectDir = "service-music"
project(":service-music-api").projectDir = new File(settingsDir, "${musicProjectDir}/api")
project(":service-music-core").projectDir = new File(settingsDir, "${musicProjectDir}/api/core")
project(":service-music-impl").projectDir = new File(settingsDir, "${musicProjectDir}/impl")


String performanceProjectDir = "service-performance"
project(":service-performance-api").projectDir = new File(settingsDir, "${performanceProjectDir}/api")
project(":service-performance-api-core").projectDir = new File(settingsDir, "${performanceProjectDir}/api/core")
project(":service-performance-impl").projectDir = new File(settingsDir, "${performanceProjectDir}/impl")


String catalogProjectDir = "service-catalog"
project(":service-catalog-content-core").projectDir = new File(settingsDir, "${catalogProjectDir}/content/core")
project(":service-catalog-content-data").projectDir = new File(settingsDir, "${catalogProjectDir}/content/data")
project(":service-catalog-content").projectDir = new File(settingsDir, "${catalogProjectDir}/content/impl")
project(":service-catalog-content-shared").projectDir = new File(settingsDir, "${catalogProjectDir}/content/shared")

project(":service-catalog-record-core").projectDir = new File(settingsDir, "${catalogProjectDir}/record/core")
project(":service-catalog-record-data").projectDir = new File(settingsDir, "${catalogProjectDir}/record/data")
project(":service-catalog-record").projectDir = new File(settingsDir, "${catalogProjectDir}/record/impl")
project(":service-catalog-record-shared").projectDir = new File(settingsDir, "${catalogProjectDir}/record/shared")


String userProjectDir = "service-users"
project(":service-users-api").projectDir = new File(settingsDir, "${userProjectDir}/api")
project(":service-users-core").projectDir = new File(settingsDir, "${userProjectDir}/core")
project(":service-users-data").projectDir = new File(settingsDir, "${userProjectDir}/data")
project(":service-users-impl").projectDir = new File(settingsDir, "${userProjectDir}/impl")
project(":service-users-shared").projectDir = new File(settingsDir, "${userProjectDir}/shared")

